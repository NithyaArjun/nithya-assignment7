package com.coderscampus;

import java.util.Arrays;

public class CustomArrayList<T> implements CustomList<T> {

	Object[] items = new Object[10];
	int size = 0;

	@Override
	public boolean add(Object item) throws IndexOutOfBoundsException {

		if (size == items.length) {
			int newSize = items.length * 2;
			items = Arrays.copyOf(items, newSize);
		}

		items[size] = item;
		return true;
	}

	@Override
	public boolean add(int index, Object item) throws IndexOutOfBoundsException {

		if (index > items.length || index < 0) {
			throw new IndexOutOfBoundsException("index=" + index + " size=" + size);
		}

		items[index] = item;
		size++;
		return true;
	}

	@Override
	public int getSize() {

		return size;
	}

	@SuppressWarnings("unchecked")
	@Override
	public T get(int index) throws IndexOutOfBoundsException {

		if (index > items.length || index < 0) {
			throw new IndexOutOfBoundsException("index=" + index + " size=" + size);
		}

		return (T) items[index];
	}

	@Override
	public T remove(int index) {

		return null;
	}

}
